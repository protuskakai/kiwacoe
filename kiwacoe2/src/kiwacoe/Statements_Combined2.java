/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kiwacoe;

import java.awt.Cursor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.Alert;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import static kiwacoe.Accounts_Add.zaccno;


/**
 *
 * @author user
 */
public class Statements_Combined2 extends javax.swing.JFrame {
      HashMap hm =null;
       ResultSet rs = null;
          public String mx,sql;
       int ff=0;
           static ResultSet rs2 = null;
     static ResultSet rs3 = null;
      static ResultSet rs4 = null;
  
    public int x = 0,r=0;
    static PreparedStatement pst = null;
      static PreparedStatement pst2 = null;
       static PreparedStatement pst4 = null;
       static PreparedStatement pst3 = null;
       Connection conn = DBconnect.ConnecrDb();
    /**
     * Creates new form Meter_Reading_List
     */
    public Statements_Combined2(java.awt.Frame parent, boolean modal) {
       // super(parent, modal);
       
        initComponents();
         String qym[] = GetMonth.set_yr_mon();
      //  mon.setSelectedItem(qym[0]);
        yr.setSelectedItem(qym[1]);
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        membid = new javax.swing.JTextField();
        nam = new javax.swing.JTextField();
        yr = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Preview");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Staff ID");

        jButton3.setText("Find");
        jButton3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton3FocusGained(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Name");

        membid.setEditable(false);

        yr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026" }));
        yr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yrFocusGained(evt);
            }
        });
        yr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yrActionPerformed(evt);
            }
        });

        jLabel4.setText("Year");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(yr, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(membid, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(nam)))))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(membid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yr, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Statements_Combined2.this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        ff=1;
        //  zmembid="";
        //  znam="";
        Find_Customer.zfind="Shares";
        Find_Customer dd=new Find_Customer();
        // dd.setModal(true);
        //  dialog.setSize(400, 400);
        dd.setLocationRelativeTo(null);
        // dd.setExtendedState(dd.MAXIMIZED_BOTH);
        dd.setResizable(false);
        dd.setTitle("Find Staff");
        dd.setVisible(true);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton3FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton3FocusGained
        // TODO add your handling code here:
        if  ( ff==0)
        {

        }else
        {

            //  MessageBox.infoBox(Find_Customer.zmembid, zstat);
            membid.setText(Find_Customer.zmembid);
            nam.setText(Find_Customer.znam);
          //  typ.requestFocus();
            ff=0;

        }
    }//GEN-LAST:event_jButton3FocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        String xnam = nam.getText().toString();
        String xmembid = membid.getText().toString();
       String  xyr=yr.getSelectedItem().toString();
      //  String xtyp = typ.getSelectedItem().toString();
        HashMap hm = new HashMap();
        hm.put("membid", xmembid);
        double tbf=Double.parseDouble( sh_bf(xmembid,xyr));
           double tcf=Double.parseDouble( sh_cf(xmembid,xyr));
        hm.put("sh_bf", tbf);
         hm.put("sh_cf", tcf);
         hm.put("yr", xyr);
       // hm.put("typ", xtyp);
        hm.put("title", "NAME : " +xnam+"        YEAR : "+ xyr+"       M/NO :  "+xmembid)  ;
        String filename = "reportbalances_1.jrxml";
        String title = "Statement For  : " +xnam+" : "+ xyr;
        RunReports.preview(filename, hm, title);
     //   System.out.println(nam + " " + xtyp + " " );
        //    msbbox.show(Alert.AlertType.ERROR,"Done", "SQL Error", "ffff");
        this.setCursor(Cursor.getDefaultCursor());
        //    msbbox.show(Alert.AlertType.ERROR,"Done", "SQL Error", "ffff");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void yrFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yrFocusGained
        // TODO add your handling code here:
      // ' doread();
    }//GEN-LAST:event_yrFocusGained

    private void yrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yrActionPerformed
        // TODO add your handling code here:
     // '  doread();
    }//GEN-LAST:event_yrActionPerformed
public String sh_bf(String membid,String yrr)
{
    String samt="";
     String sql="select count(*) as cnt,sum(amt) as amtt from shares where membid='"+membid+"' and yr<'"+yrr+"'";
     try {
            samt=  execute(sql);
          } catch (SQLException ex) {
              Logger.getLogger(Statements_Combined2.class.getName()).log(Level.SEVERE, null, ex);
          }
    return samt;
}
public String sh_cf(String membid,String yrr)
{
   
    String samt="";
     String sql="select count(*) as cnt,sum(amt) as amtt from shares where membid='"+membid+"' and yr<='"+yrr+"'";
    
          try {
            samt=  execute(sql);
          } catch (SQLException ex) {
              Logger.getLogger(Statements_Combined2.class.getName()).log(Level.SEVERE, null, ex);
          }
    return samt;
}
public String execute(String sql) throws SQLException
{ 
       System.out.print(sql);
       String amt="";
            pst = conn.prepareStatement(sql);

            rs = pst.executeQuery();
            rs.first();
            if (   rs.getInt("cnt")>0)
        {
                amt=rs.getString("amtt");
        }else
            {
                amt="0";  
            
        }  
        //    town.setSelectedItem(rs.getString("town"));
       
      
return amt;
      

   
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Meter_Reading_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Meter_Reading_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Meter_Reading_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Meter_Reading_List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Meter_Reading_List dialog = new Meter_Reading_List(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField membid;
    private javax.swing.JTextField nam;
    private javax.swing.JComboBox<String> yr;
    // End of variables declaration//GEN-END:variables
}

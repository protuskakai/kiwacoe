/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kiwacoe;

//import static examples.NewJFrame2.pst;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.Alert;
import javax.swing.JTextField;






//import static majiApp.Payments_capture.zyr;
//import static majiApp.Payments_capture.pst2;
//import static majiApp.Payments_BList.zstat;
//import static majiApp.Payments_capture.sql;
//import static majiApp.Payments_capture.zmon;

/**
 *
 * @author user
 */
public class LoansNew_Capture_old extends javax.swing.JFrame {
 static ResultSet rs = null;
     static ResultSet rs2 = null;
     static ResultSet rs3 = null;
      static ResultSet rs4 = null;
    static String mx, sql,xseq;
    public int x = 0,r=0;
    static PreparedStatement pst = null;
      static PreparedStatement pst2 = null;
       static PreparedStatement pst4 = null;
       static PreparedStatement pst3 = null;
    //xmembid+"','"+xnam+"',"+xamt+",'"+xtyp+"','"+xcomm+"','"+xyr+"','"+xmon+"
     public String xnam,xamt,xcomm,xtyp,xmembid,xrdate,xdur,xintr,xqid1,xqid2,
             xqid3,xqid4,xqnam1,xqnam2,xqnam3,xqnam4,xfee;
     static String zyr,zmon,ztyp,zfind,zstat;
     int ff=0;
     public Connection conn=DBconnect.ConnecrDb();
    /**
     * Creates new form NewJDialog
     */
    public LoansNew_Capture_old(java.awt.Frame parent, boolean modal) {
       // super(parent, modal);
        initComponents();
         jButton3.setText("Add");
        zmon = LoansNew_List.zmon;
        zyr = LoansNew_List.zyr;
        ztyp = LoansNew_List.ztyp;
      //  zreg = Readings_BList.zreg;
        zstat = LoansNew_List.zstat;
    
      
       jLabel7.setText("Year:  " + zyr + "    Month: " + zmon  + "   Type:  " + ztyp+"  Status:  "+zstat);
       seq.setVisible(false);
       nam.setEditable(false);
     try {
         //    MessageBox.infoBox(zstat, "Open Batch");
         getdur_intr();
     } catch (SQLException ex) {
         Logger.getLogger(LoansNew_Capture_old.class.getName()).log(Level.SEVERE, null, ex);
     }
        if (zstat.equals("Posted"))
        {
           jButton3.setEnabled(false);
            
        }
      //    updatetots();
       // poputate_fields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        nam = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dur = new javax.swing.JTextField();
        membid = new javax.swing.JTextField();
        rdate = new javax.swing.JTextField();
        amt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comm = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        seq = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        qnam1 = new javax.swing.JTextField();
        qid2 = new javax.swing.JTextField();
        qnam2 = new javax.swing.JTextField();
        qid3 = new javax.swing.JTextField();
        qnam3 = new javax.swing.JTextField();
        qid4 = new javax.swing.JTextField();
        qnam4 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        qid1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.setFocusable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 157, 108, -1));

        cmt.setFocusable(false);
        jPanel1.add(cmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 32, 225, -1));

        jLabel5.setText("Amount");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 201, 100, -1));

        jButton1.setText(">>");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 32, -1, -1));

        jButton2.setText("<<");
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 32, -1, -1));

        nam.setFocusable(false);
        jPanel1.add(nam, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 154, 244, -1));

        add.setText("New");
        add.setFocusable(false);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 32, -1, -1));

        jButton5.setText("Find");
        jButton5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton5FocusGained(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(387, 118, -1, -1));

        jLabel15.setText("Duration(Months)");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 250, 100, -1));

        jLabel8.setText("Date");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 87, 86, -1));

        dur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durActionPerformed(evt);
            }
        });
        jPanel1.add(dur, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 247, 250, -1));

        membid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                membidFocusLost(evt);
            }
        });
        jPanel1.add(membid, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 121, 169, -1));

        rdate.setEditable(false);
        jPanel1.add(rdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(194, 84, 170, -1));

        amt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amtActionPerformed(evt);
            }
        });
        jPanel1.add(amt, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 198, 250, -1));

        jLabel1.setText("Member ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 124, 108, -1));

        jLabel6.setText("Remarks");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 299, 100, -1));

        comm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commActionPerformed(evt);
            }
        });
        jPanel1.add(comm, new org.netbeans.lib.awtextra.AbsoluteConstraints(192, 296, 250, -1));

        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 351, 60, -1));

        jButton4.setText("Close");
        jButton4.setFocusable(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, 71, -1));
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 354, 250, 20));

        seq.setText("jTextField1");
        jPanel1.add(seq, new org.netbeans.lib.awtextra.AbsoluteConstraints(211, 385, 60, -1));

        jButton6.setText("=>");
        jButton6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton6FocusGained(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 80, 50, -1));

        jTabbedPane1.addTab("Loan Details", jPanel1);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Member ID");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setText("Name");

        qnam1.setFocusable(false);

        qid2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                qid2FocusLost(evt);
            }
        });

        qnam2.setFocusable(false);

        qid3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                qid3FocusLost(evt);
            }
        });

        qnam3.setFocusable(false);

        qid4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                qid4FocusLost(evt);
            }
        });

        qnam4.setFocusable(false);

        jLabel3.setText("Quarator 1 ");

        jLabel4.setText("Quarator 2 ");

        jLabel10.setText("Quarator 3");

        jLabel11.setText("Quarator 4");

        qid1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                qid1FocusLost(evt);
            }
        });
        qid1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qid1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel14))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(74, 74, 74)
                        .addComponent(qid1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(qnam1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(74, 74, 74)
                        .addComponent(qid2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(qnam2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(77, 77, 77)
                        .addComponent(qid3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(qnam3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(77, 77, 77)
                        .addComponent(qid4, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(qnam4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(qid1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qnam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(qid2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qnam2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(qid3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qnam3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(qid4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qnam4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(211, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quarators", jPanel2);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 255));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        try{
            if (x == 0) {
                open();
            }

            if(!rs3.isLast())
            {
                rs3.next();
                int cnt= rs3.getRow();
                int cmm=  cntt();
                cmt.setText(Integer.toString( cnt)+" of "+ Integer.toString( cmm));
                loaddata();
            }else
            {
                rs3.last();
                //   msbbox.show( Alert.AlertType.ERROR,"End of File", "titleBar",  "Header");
                return;
            }
        } catch (SQLException ex) {
            //      Logger.getLogger(NewJFrame2.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            if (x == 0) {
                open();
            }

            if (!rs3.isFirst()) {
                rs3.previous();
                int cnt= rs3.getRow();

                int cmm=  cntt();
                cmt.setText(Integer.toString( cnt)+" of "+ Integer.toString( cmm)  );
                // String tmembid = rs.getString("membid");  //+"\n";
                loaddata();
            } else {
                // msbbox.show(Alert.AlertType.ERROR, "End of File", "titleBar", "Header");
                rs3.first();
                loaddata();
                return;
            }
        } catch (SQLException ex) {
            Logger.getLogger(Payments_capture.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        updatetots();
        x=0;
        membid.setText( "");

        nam.setText( "");
        //   typ.setSelectedItem( "");
        amt.setText("");
        rdate.setText("");
        comm.setText("");
        qid1.setText("");
        qid2.setText("");
        qid3.setText("");
        qid4.setText("");
        qnam1.setText("");
        qnam2.setText("");
        qnam3.setText("");
        qnam4.setText("");
        dur.setText("");
        jButton3.setText("Add");
        rdate.requestFocus();
    }//GEN-LAST:event_addActionPerformed

    private void jButton5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton5FocusGained
        // TODO add your handling code here:
        if  ( ff==0)
        {

        }else
        {
            if (zstat.equals("Open"))
            {
                //  MessageBox.infoBox(Find_Customer.zmembid, zstat);
                membid.setText(Find_Customer.zmembid);
                nam.setText(Find_Customer.znam);
                //dur.requestFocus();
                amt.requestFocus();
                ff=0;
            }
        }
    }//GEN-LAST:event_jButton5FocusGained

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        ff=1;
        //   zmembid="";
        //   znam="";
        Find_Customer.zfind="New";
        // Find_Customer.zfind="P";
        Find_Customer dd=new Find_Customer();
        // dd.setModal(true);
        //  dialog.setSize(400, 400);
        dd.setLocationRelativeTo(null);
        // dd.setExtendedState(dd.MAXIMIZED_BOTH);
        dd.setResizable(false);
        dd.setTitle("Find Staff");
        dd.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void durActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_durActionPerformed

    private void membidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_membidFocusLost
        // TODO add your handling code here:
        if (membid.getText().trim().isEmpty())
        {
            jButton3.setEnabled(false);
        }else
        {
            jButton3.setEnabled(true);
            try {
                populate_data(0);
            } catch (SQLException ex) {
                Logger.getLogger(Payments_capture.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_membidFocusLost

    private void amtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amtActionPerformed

    private void qid2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_qid2FocusLost
        if (qid2.getText().trim().isEmpty())
        {
            //  jButton3.setEnabled(false);
        }else
        {
            //  jButton3.setEnabled(true);
            try {
                populate_data(2);
            } catch (SQLException ex) {
                Logger.getLogger(Payments_capture.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_qid2FocusLost

    private void qid3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_qid3FocusLost
        // TODO add your handling code here:
        if (qid3.getText().trim().isEmpty())
        {
            //  jButton3.setEnabled(false);
        }else
        {
            //  jButton3.setEnabled(true);
            try {
                populate_data(3);
            } catch (SQLException ex) {
                Logger.getLogger(Payments_capture.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_qid3FocusLost

    private void qid4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_qid4FocusLost
        // TODO add your handling code here:
        if (qid4.getText().trim().isEmpty())
        {
            //  jButton3.setEnabled(false);
        }else
        {
            //  jButton3.setEnabled(true);
            try {
                populate_data(4);
            } catch (SQLException ex) {
                Logger.getLogger(Payments_capture.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_qid4FocusLost

    private void qid1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_qid1FocusLost
        // TODO add your handling code here:
        if (qid1.getText().trim().isEmpty())
        {
            //  jButton3.setEnabled(false);
        }else
        {
            //  jButton3.setEnabled(true);
            try {
                populate_data(1);
            } catch (SQLException ex) {
                Logger.getLogger(Payments_capture.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_qid1FocusLost

    private void qid1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qid1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qid1ActionPerformed

    private void commActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int hh=Integer.parseInt(dur.getText().toString());
        if(hh>72 || hh<0)
        {
            MessageBox.infoBox("Invalid Value", "Duration");
            return;
        }
        JTextField nn[] = { membid,nam,amt,comm,rdate,qid1,qid2,qid3,qid3,qid4};
        //  JComboBox zz[] = {grp,reg,cat};
        int jj = Validate_Empty_Fields.validate_textfields(nn);
        //  int yy = Validate_Empty_Fields.validate_comboboxes(zz);
        if (jj == 1 ) {
            return;
        }

        String mm=jButton3.getText().toString();
        if (mm.equals("Save"))
        {
            performSave();
        }else
        {
            performAdd();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        // NewJFrame2 frame = new NewJFrame2();

        // frame.dispose();
        LoansNew_Capture_old.this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton6FocusGained
        // TODO add your handling code here:
        if (r ==1 && Kalenda.gdat.length()>0) {
            r=0;
            rdate.setText( Kalenda.gdat);
            membid.requestFocus();
        }else
        {
            r=0;
        }
    }//GEN-LAST:event_jButton6FocusGained

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        r=1;
        Kalenda dd=new Kalenda();
        // dd.setModal(true);
        //  dialog.setSize(400, 400);
        dd.setLocationRelativeTo(null);
        // dd.setExtendedState(dd.MAXIMIZED_BOTH);
        dd.setDefaultCloseOperation(dd.DO_NOTHING_ON_CLOSE);
        dd.setResizable(false);
        dd.setTitle("Calender");
        dd.setVisible(true);

        //  MessageBox.infoBox(Kalenda.gdat, user);
        //  this.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed
public void updatetots()
{
        try { 
        String[] qq= BatchTotals.yrmon(zyr, zmon,  "nwlbatches", "loans");
         cmt.setText(" Records="+qq[0]+"    Total Amount="+qq[1]);
     } catch (SQLException ex) {
         Logger.getLogger(LoansNew_Capture_old.class.getName()).log(Level.SEVERE, null, ex);
     }
}    
   public void populate_data(int m) throws SQLException
{
     String sql = "SELECT *  from saccodb where membid='"+membid.getText().toString()+"'";
    //Connection conn = DBconnect.ConnecrDb();
    System.out.println(sql);
    pst2 = conn.prepareStatement(sql);
    rs2 = pst2.executeQuery();
   // metno="Nil";
   // metsz="Nil";
    while(rs2.next())
    {
        switch (m) {
            case (0):

                nam.setText(rs2.getString("nam"));
                amt.requestFocus();
                break;
           

            case (1):

                qnam1.setText(rs2.getString("nam"));
                qid2.requestFocus();
                break;
            case (2):

                 qnam2.setText(rs2.getString("nam"));
                qid3.requestFocus();
                break;
            case (3):

               qnam3.setText(rs2.getString("nam"));
                qid4.requestFocus();
                break;
            case (4):

                qnam4.setText(rs2.getString("nam"));
              //  amt.requestFocus();
                break;
        }
    }
  
}
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payments_capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payments_capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payments_capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payments_capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Payments_capture dialog = new Payments_capture(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });

                //  dialog.setModal(true);
                //  dialog.setSize(400, 400);
                dialog.setLocationRelativeTo(null);
                dialog.setTitle("Shares");
                dialog.setResizable(false);
                dialog.setVisible(true);
            }
        });
    }
public void open() throws SQLException
{
    String        sql = "SELECT * from loans where yr='" + zyr + "' and mon='" + zmon + "' and typ='" + ztyp + "'";
  //  Connection conn = DBconnect.ConnecrDb();
    pst3 = conn.prepareStatement(sql);
    rs3 = pst3.executeQuery();
    x = 1;    
    int cnt= cntt();
   cmt.setText(Integer.toString( cnt));
}
public void loaddata()
{
     try {

        membid.setText(rs3.getString("membid"));

        nam.setText(rs3.getString("nam"));
        //  rdate.setText(rs3.getString("rdate"));
        rdate.setText(Format_date.dmy(rs3.getString("rdate")));
        amt.setText(rs3.getString("amt"));
        //  pread.setText(rs3.getString("pread"));
        //  cread.setText(rs3.getString("cread"));
        comm.setText(rs3.getString("comm"));
        seq.setText(rs3.getString("accno"));
        qid1.setText(rs3.getString("qid1"));
        qid2.setText(rs3.getString("qid2"));
        qid3.setText(rs3.getString("qid3"));
        qid4.setText(rs3.getString("qid4"));
        qnam1.setText(rs3.getString("qnam1"));
        qnam2.setText(rs3.getString("qnam2"));
        qnam3.setText(rs3.getString("qnam3"));
        dur.setText(rs3.getString("dur"));
        qnam4.setText(rs3.getString("qnam4"));
        jButton3.setText("Save");

    } catch (SQLException ex) {
        Logger.getLogger(Payments_capture.class.getName()).log(Level.SEVERE, null, ex);
        MessageBox.infoBox(ex.toString(), "dd");
    }

}
public void performAdd()
{
    getdata();

  //  String dd = xrdate.substring(0, 2);
 //   String ddx = xrdate.substring(0, 5);
 //   String mm = ddx.substring(3);

 //   String yy = xrdate.substring(6);
 //   xrdate = yy + "/" + mm + "/" + dd;
    //MessageBox.infoBox(xrdate, "sss");// membid,nam,typ,grp,comm,yr,mon,reg,cread,pread,cdate,ctime                                     
    sql = "insert into  loans (membid,nam,typ,amt,comm,yr,mon,rdate,cdate,ctime,stat,dur,intr,status,qid1,qid2,qid3,qid4,qnam1,qnam2,qnam3,qnam4,fee)"
            + " values('" + xmembid + "','" + xnam + "','" + ztyp + "'," + xamt + ",'" + xcomm + "','" + zyr + "','" + zmon + "','" + xrdate + "',CURDATE(),CURTIME(),'U'," + xdur + "," + xintr + ",'Active'"
            + ",'" + xqid1 + "'"
            + ",'" + xqid2 + "'"
            + ",'" + xqid3 + "'"
            + ",'" + xqid4 + "'"
            + ",'" + xqnam1 + "'"
            + ",'" + xqnam2 + "'"
            + ",'" + xqnam3 + "'"
            + ",'" + xqnam4 + "'"
            + "," + xfee + ""
            + ")";
    //   Connection conn=DBconnect.ConnecrDb();
    System.out.println(sql);
    try {

        pst2 = conn.prepareStatement(sql);
        pst2.executeUpdate(sql);
        //    rs= pst.executeQuery();
    } catch (SQLException ex) {
        Logger.getLogger(Payments_capture.class.getName()).log(Level.SEVERE, null, ex);
        //  msbbox.show(Alert.AlertType.ERROR, ex.toString(),"insertrec Method" ,"Database Error");
        MessageBox.infoBox(ex.toString(), "Update Error");
        return;
    }
    updatetots();
    nam.setText("");
    membid.setText("");
    //  grp.setText("");
    //    cat.setText("");
    rdate.setText("");
    amt.setText("");
    comm.setText("");
    qid1.setText("");
    qid2.setText("");
    qid3.setText("");
    qid4.setText("");
    qnam1.setText("");
    qnam2.setText("");
    dur.setText("");
    qnam3.setText("");
    qnam4.setText("");
    rdate.requestFocus();
    
}
 public void poputate_fields() {
     //   Connection conn = DBconnect.ConnecrDb();

        sql = "SELECT * from loans where yr='" + zyr + "' and mon='" + zmon  + "' and typ='" + ztyp + "'";

        try {
            pst = conn.prepareStatement(sql);

            rs = pst.executeQuery();
            rs.first();
          //  rdate.setText(rs.getString("rdate"));
              rdate.setText(Format_date.dmy(rs.getString("rdate")));
            membid.setText(rs.getString("membid"));
            nam.setText(rs.getString("nam"));
            dur.setText(rs.getString("dur"));
            amt.setText(rs.getString("amt"));

        } catch (SQLException ex) {
            Logger.getLogger(UsersLIst.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
public void performSave()
{
  //  xrdate=rdate.getText().toString();
  //  String dd=xrdate.substring(0,2);
 //    String ddx=xrdate.substring(0,5);
 //    String mm=ddx.substring(3);
    
 //    String yy=xrdate.substring(6);
  //   xrdate=yy+"/"+ mm+"/"+dd;
     sql = " update loans set "
            + "rdate='" + xrdate + "'"
            + ",nam='" + nam.getText().toString() + "'"
         //    + ",typ='" + nam.getText().toString() + "'"
           + ",membid='" + membid.getText().toString() + "'"
               + ",comm='" + comm.getText().toString() + "'"
               + ",qid1='" + qid1.getText().toString() + "'"
               + ",qid2='" + qid2.getText().toString() + "'"
              + ",dur='" + dur.getText().toString() + "'"
               + ",qid3='" + qid3.getText().toString() + "'"
               + ",qid4='" + qid4.getText().toString() + "'"
               + ",qnam1='" + qnam1.getText().toString() + "'"
               + ",qnam2='" + qnam2.getText().toString() + "'"
               + ",qnam3='" + qnam3.getText().toString() + "'"
               + ",qnam4='" + qnam4.getText().toString() + "'"
       
            + ",amt=" + amt.getText().toString()  + ""
     
            + //  ",paddr='" + xpaddr +"'"+
            "  where accno=" + seq.getText().toString() + "";
       
    System.out.println(sql);
     
   //   msbbox.show(Alert.AlertType.ERROR, sql,"insertrec Method" ,"Database Error");
       
         System.out.println(sql);
          try {
              pst2=conn.prepareStatement(sql);
              pst2.executeUpdate(sql);
             //    rs= pst.executeQuery();
          } catch (SQLException ex) {
              Logger.getLogger(Payments_capture.class.getName()).log(Level.SEVERE, null, ex);
              // msbbox.show(Alert.AlertType.ERROR, ex.toString(),"insertrec Method" ,"Database Error");
               MessageBox.infoBox(ex.toString(), "Update Error");
              return;
          }
       
     try {  
         refresh_recordset();
     } catch (SQLException ex) {
         Logger.getLogger(Payments_capture.class.getName()).log(Level.SEVERE, null, ex);
         // msbbox.show(Alert.AlertType.ERROR, ex.toString(),"insertrec Method" ,"Database Error");
           MessageBox.infoBox(ex.toString(), "Update Error");
     }
}
public void refresh_recordset() throws SQLException 
{
    int zz=rs3.getRow();
     String        sql = "SELECT * from loans where yr='" + zyr + "' and mon='" + zmon + "' and typ='" + ztyp + "'";
  //  Connection conn = DBconnect.ConnecrDb();
    pst3 = conn.prepareStatement(sql);
    rs3 = pst3.executeQuery();
    x = 1;    
    int cnt= cntt();
   cmt.setText(Integer.toString( cnt));
   
  rs3.absolute(zz);
  loaddata();
}
public void getdata()
{
    
    xmembid = membid.getText().toString();
    xnam = nam.getText().toString();
    xrdate = rdate.getText().toString();
    xamt = amt.getText().toString();
    xcomm = comm.getText().toString();
    xqid1 = qid1.getText().toString();
    xqid2 = qid2.getText().toString();
    xqid3 = qid3.getText().toString();
    xdur = dur.getText().toString();
    xqid4 = qid4.getText().toString();
    xqnam1 = qnam1.getText().toString();
    xqnam2 = qnam2.getText().toString();
    xqnam3 = qnam3.getText().toString();
    xqnam4 = qnam4.getText().toString();
     xrdate = xrdate.replace("-", "/");
    String mdate[] = xrdate.split("/");
    String d = mdate[0];
    String m = mdate[1];
    String y = mdate[2];
    xrdate = y + "-" + m + "-" + d;
    
    double fee = Double.parseDouble(amt.getText().toString()) * 0.03;
    xfee = Double.toString(fee);
    //  xtyp = typ.getSelectedItem().toString();
}
public int cntt() throws SQLException
{
    
    String sql = "SELECT count(*) as cnt from loans where yr='" + zyr + "' and mon='" + zmon + "' and typ='" + ztyp + "'";
  //  Connection conn = DBconnect.ConnecrDb();
    System.out.println(sql);
    pst2 = conn.prepareStatement(sql);
    rs2 = pst2.executeQuery();
    rs2.next();
    int cnt= rs2.getInt("cnt");
    return cnt;
}
public Date convertToDate(String receivedDate) throws ParseException{
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        Date date = formatter.parse(receivedDate);
        return date;
    }
public void getdur_intr() throws SQLException
{
      sql = "SELECT * from loantypes where nam='" + ztyp + "'";

       
            pst4 = conn.prepareStatement(sql);

            rs4 = pst4.executeQuery();
            rs4.first();
         //   xdur=rs4.getString("dur");
            xintr=rs4.getString("intr");
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField amt;
    private javax.swing.JTextField cmt;
    private javax.swing.JTextField comm;
    private javax.swing.JTextField dur;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField membid;
    private javax.swing.JTextField nam;
    private javax.swing.JTextField qid1;
    private javax.swing.JTextField qid2;
    private javax.swing.JTextField qid3;
    private javax.swing.JTextField qid4;
    private javax.swing.JTextField qnam1;
    private javax.swing.JTextField qnam2;
    private javax.swing.JTextField qnam3;
    private javax.swing.JTextField qnam4;
    private javax.swing.JTextField rdate;
    private javax.swing.JTextField seq;
    // End of variables declaration//GEN-END:variables
}

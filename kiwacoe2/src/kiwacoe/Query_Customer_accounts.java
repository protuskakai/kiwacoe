/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kiwacoe;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.ListSelectionModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author user
 */
public class Query_Customer_accounts extends javax.swing.JFrame {
       public String mx,sql;
        DefaultTableModel testlist = new DefaultTableModel();
 ResultSet rs = null;
  ResultSet rs1 = null;
   ResultSet rs3 = null;
//  DefaultTableModel model=null;
        PreparedStatement pst3 = null;
         PreparedStatement pst = null;
          PreparedStatement pst1 = null;
        public String xuserid,xnam,xpass,zcustid;
        static String zfind,membid,accno,nam;
        Connection conn =DBconnect.ConnecrDb();   
    /**
     * Creates new form CustomersList
     */
    public Query_Customer_accounts() {
        initComponents();
         jButton4.setVisible(false);
        ListSelectionModel cellSelectionModel = jTable1.getSelectionModel();
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                String muserid = null;
                String mtyp = null;
                String mnam = null;
                int[] selectedRow = jTable1.getSelectedRows();
                int[] selectedColumns = jTable1.getSelectedColumns();
                int row = jTable1.getSelectedRow();
                int col = 1; // ID is the first Column
                if (row > -1) {
                    membid = jTable1.getValueAt(row, 0).toString();
                     nam = jTable1.getValueAt(row, 1).toString();
                    //   zamt = jTable1.getValueAt(row, 4).toString();
                    jLabel2.setText("Transactions For  :" + nam);
                    shares();
                    pst3=null;
                    rs3=null;
                    jTable5.removeAll();
                    jTable7.removeAll();
                    jTable2.removeAll();
              
                loans();
               
                  bank();

                }
                
            }

        });
         accno="000";
               ListSelectionModel cellSelectionModel2 = jTable7.getSelectionModel();
        cellSelectionModel2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        cellSelectionModel2.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                String muserid = null;
                String mtyp = null;
                String mnam = null;
                int[] selectedRow = jTable7.getSelectedRows();
                int[] selectedColumns = jTable7.getSelectedColumns();
                int row = jTable7.getSelectedRow();
                int col = 1; // ID is the first Column
                if (row > -1) {
                    accno = jTable7.getValueAt(row, 0).toString();
                 ////   jButton1.setVisible(true);
                    dloans();

                }
               
               // jTable5.removeAll();
                

            }

        });
        
        
        
        val.getDocument().addDocumentListener(new DocumentListener() {   //val listener
            public void changedUpdate(DocumentEvent e) {
                warn();
            }

            public void removeUpdate(DocumentEvent e) {
                warn();
            }

            public void insertUpdate(DocumentEvent e) {
                warn();
            }

            public void warn() {
               doread();
            }
        });
        val.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jLabel1 = new javax.swing.JLabel();
        fld = new javax.swing.JComboBox<>();
        val = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusable(false);

        jLabel1.setText("Search By");

        fld.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Customer ID" }));
        fld.setFocusable(false);

        val.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valActionPerformed(evt);
            }
        });

        jButton5.setText("Find");
        jButton5.setFocusable(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setGridColor(new java.awt.Color(51, 204, 0));
        jTable1.setSelectionBackground(new java.awt.Color(0, 204, 153));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(jTable1);

        jTabbedPane5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 204), new java.awt.Color(0, 0, 0), new java.awt.Color(204, 204, 255), new java.awt.Color(153, 153, 153)));
        jTabbedPane5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTabbedPane5FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTabbedPane5FocusLost(evt);
            }
        });

        jTable6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable6.setGridColor(new java.awt.Color(51, 204, 0));
        jScrollPane6.setViewportView(jTable6);

        jTabbedPane5.addTab("Shares", jScrollPane6);

        jTable7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable7.setGridColor(new java.awt.Color(51, 204, 0));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, new javax.swing.JButton(), org.jdesktop.beansbinding.ObjectProperty.create(), jTable7, org.jdesktop.beansbinding.BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);
        binding.bind();
        jTable7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable7FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable7FocusLost(evt);
            }
        });
        jScrollPane7.setViewportView(jTable7);

        jTabbedPane5.addTab("Loan Summary", jScrollPane7);

        jTable5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable5.setGridColor(new java.awt.Color(51, 204, 0));
        jScrollPane5.setViewportView(jTable5);

        jTabbedPane5.addTab("Loan Deductions", jScrollPane5);

        jTable2.setAutoCreateRowSorter(true);
        jTable2.setGridColor(new java.awt.Color(51, 204, 0));
        jScrollPane2.setViewportView(jTable2);

        jTabbedPane5.addTab("Bank Deductions", jScrollPane2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 255));

        jLabel3.setForeground(new java.awt.Color(204, 0, 51));
        jLabel3.setText(" ");

        jButton4.setText("View Guarantors");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(fld, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(val, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(100, 158, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane5)
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(99, 99, 99))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(fld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(val, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    //   jTable1.removeAll();
   //    model.
        //model =null;
       doread();
    }//GEN-LAST:event_jButton5ActionPerformed
public void doread()
{
      DefaultTableModel  model = new DefaultTableModel();
       String sfld= fld.getSelectedItem().toString();
       String sval=val.getText().toString();
       switch (sfld)
       {
           case "All":
               sql=" select * from saccodb ";
               break;
             case "Name":
               sql=" select * from saccodb where nam like '%"+sval+"%'";
               break;   
                case "Member ID":
               sql=" select * from saccodb where membid like '%"+sval+"%'";
               break;  
           
       }
       
          
        // jTable1 hh;
         jTable1.setModel(model);
         model.addColumn("Member ID");
         model.addColumn("Name");
          model.addColumn("Shares Amount");
          model.addColumn("Welfare Membership");
           model.addColumn("Active");
     

    try {
        pst=conn.prepareStatement(sql);
    

       rs= pst.executeQuery();
          // rs.first();
   int p=0;
   
      boolean wel=false;
       boolean stat=false;
          while (rs.next()) {
            //  readdata();
            wel= rs.getBoolean("wel");
             stat= rs.getBoolean("stat");
          
            model.insertRow(p, new Object[]{rs.getString("membid"),
                rs.getString("nam"),
                Format_amt.format(rs.getString("samt")),
                wel,
                stat

            });
            //      jTable1.changeSelection(0, 0, false, false);
        }
           
           } catch (SQLException ex) {
        Logger.getLogger(UsersLIst.class.getName()).log(Level.SEVERE, null, ex);
    }
 
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    DefaultTableCellRenderer leftRenderer = new DefaultTableCellRenderer();
    rightRenderer.setHorizontalAlignment(JLabel.CENTER);
    leftRenderer.setHorizontalAlignment(JLabel.RIGHT);
    jTable1.getColumnModel().getColumn(2).setCellRenderer(leftRenderer);
    jTable1.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
    jTable1.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
    DefaultTableCellRenderer rendar1 = new DefaultTableCellRenderer();
    //  rendar1.setForeground(Color.decode("123130040"));
    rendar1.setBackground(Color.decode("123130040"));
    jTable1.getColumnModel().getColumn(0).setCellRenderer(rendar1);
     jTable1.setShowGrid(true); 
     jTable1.setRowHeight(30);
}
    public void shares()
    {
        sql = " select * from shares where membid='" + membid + "' and amt>0 order by seq";
        DefaultTableModel model = new DefaultTableModel();
        // jTable1 hh;
        jTable6.setModel(model);
        model.addColumn("Member ID");
        model.addColumn("Name");
        model.addColumn("Year");
        model.addColumn("Month");
        model.addColumn("Amount");
        model.addColumn("Type");

        double stot = 0;
        try {
            pst = conn.prepareStatement(sql);

            rs = pst.executeQuery();
            // rs.first();
            int p = 0;
            while (rs.next()) {
                //  readdata();

                //    String cs=    rs.getString("membid");
                stot = stot + rs.getDouble("amt");

                model.insertRow(p, new Object[]{
                    rs.getString("membid"),
                    rs.getString("nam"),
                    rs.getString("yr"),
                    rs.getString("mon"),
                    Format_amt.format(rs.getString("amt")),
                    rs.getString("typ")

                });
                jTable6.changeSelection(0, 0, false, false);
            }

        } catch (SQLException ex) {
            Logger.getLogger(UsersLIst.class.getName()).log(Level.SEVERE, null, ex);
            MessageBox.infoBox(ex.toString(), sql);
        }
        
        DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
        DefaultTableCellRenderer leftRenderer = new DefaultTableCellRenderer();
        rightRenderer.setHorizontalAlignment(JLabel.CENTER);
        leftRenderer.setHorizontalAlignment(JLabel.RIGHT);
        jTable6.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
        jTable6.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
        jTable6.getColumnModel().getColumn(4).setCellRenderer(leftRenderer);
       //    jTable1.changeSelection(0, 0, false, false);
        jLabel3.setText("Total Shares=" + Format_amt.format(Double.toString(stot)));
        jTable6.setShowGrid(true); 
         jTable6.setRowHeight(30);
    }
public void loans()
{
           //   sql=" select * from payments where custid='"+zcustid+"'";
 // String  sql1 = " select loans.*,paid.*  from loans,paid where loans.accno=paid.accno and membid ='" + membid + "' order by loans.accno";
     String  sql1 = " select * from bal_view2 where membid ='" + membid + "' order by accno";
      //    MessageBox.infoBox(sql, sql);
    System.out.print(sql1);
    DefaultTableModel model = new DefaultTableModel();
    // jTable1 hh;
    jTable7.setModel(model);
    model.addColumn("Account");
    model.addColumn("Nam");
    model.addColumn("Loan Type");
    model.addColumn("Amount");
    model.addColumn("Paid");
     model.addColumn("Adj");
    model.addColumn("Balance");

    // model.
    // Create the first row
   //Connection conn = DBconnect.ConnecrDb();

    //  String sql = "SELECT * from users ";
    try {
        pst1 = conn.prepareStatement(sql1);

        rs1 = pst1.executeQuery();
        // rs.first();
        int p = 0;
        double paid = 0;
        double obal = 0;
        double adj = 0;
        double cbal = 0;
     //   double cbal = 0;
        String sbal = "";
        while (rs1.next()) {
            //  readdata();
            
         /*   
            paid = Double.parseDouble(rs1.getString("xamt"));
            obal = Double.parseDouble(rs1.getString("amt"));
            cbal = obal - paid;
            
         */
          paid = Double.parseDouble(rs1.getString("xpd"));
            obal = Double.parseDouble(rs1.getString("xbf"));
              adj = Double.parseDouble(rs1.getString("xadj"));
            cbal = obal - paid+adj;
            sbal = Double.toString(cbal);
            model.insertRow(p, new Object[]{
                rs1.getString("accno"),
                rs1.getString("nam"),
                rs1.getString("typ"),
         //       Format_amt.format(rs1.getString("amt")),
         //       Format_amt.format(rs1.getString("xamt")),
                
                   Format_amt.format(rs1.getString("xbf")),
                Format_amt.format(rs1.getString("xpd")),
                 Format_amt.format(rs1.getString("xadj")),
                Format_amt.format(sbal)

            });
           jTable7.changeSelection(0, 0, false, false);
        }

    } catch (SQLException ex) {
        Logger.getLogger(UsersLIst.class.getName()).log(Level.SEVERE, null, ex);
        MessageBox.infoBox(ex.toString(), sql1);
    }
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
    //  jTable1.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
    jTable7.getColumnModel().getColumn(2).setCellRenderer(rightRenderer);
    jTable7.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
    jTable7.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);
    jTable7.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
   // jTable6.changeSelection(0, 0, false, false);
    jTable7.setShowGrid(true); 
         jTable7.setRowHeight(30);
}
public void bank()
{
           //   sql=" select * from payments where custid='"+zcustid+"'";
                  sql = " select * from recovered where membid ='" + membid + "' order by seq";
       System.out.println(sql);
    DefaultTableModel model = new DefaultTableModel();
    // jTable1 hh;
    jTable2.setModel(model);
     model.addColumn("Year");
    model.addColumn("Month");
    model.addColumn("Member ID");
    model.addColumn("Name");
  //   model.addColumn("Branch");
  //     model.addColumn("Account No");
   model.addColumn("App Fee");
    model.addColumn("Insurance");
    model.addColumn("Welfare");
    model.addColumn("loan");
    model.addColumn("Shares");
    model.addColumn("Bank Charge");
    model.addColumn("Total Amount");
  //  model.addColumn("Total To Recover");
  //  model.addColumn("Bal CF");
    // model.
    // Create the first row
    Connection conn = DBconnect.ConnecrDb();

    //  String sql = "SELECT * from users ";
    try {
        pst = conn.prepareStatement(sql);

        rs = pst.executeQuery();
        // rs.first();
        int p = 0;
        String membid = "";
        String nam = "";
        String bnch = "";
        String bacc = "";
        String ins = "";
        String wel = "";
        String ln = "";
        String sh = "";
        String bch = "";
        String fee = "";
       String tot = "";
        while (rs.next()) {
            //  readdata();
            membid = rs.getString("membid");
            nam = rs.getString("nam");
            fee = rs.getString("fee");
            fee = Format_amt.format(fee);
            bnch = rs.getString("bnch");
            bacc = rs.getString("bacc");
            ins = rs.getString("ins");
            ins = Format_amt.format(ins);
            wel = rs.getString("wel");
            wel = Format_amt.format(wel);
            ln = rs.getString("ln");
            ln = Format_amt.format(ln);
            sh = rs.getString("sh");
            sh = Format_amt.format(sh);
            bch = rs.getString("bch");
            bch = Format_amt.format(bch);
            tot = rs.getString("tot");
            tot = Format_amt.format(tot);
            model.insertRow(p, new Object[]{
                rs.getString("yr"),
                rs.getString("mon"),
                membid,
                nam, fee,
                //       bnch, 
                //       bacc, 
                ins,
                wel, ln, sh, bch, tot});
            DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
            rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
            //  jTable1.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
            jTable2.getColumnModel().getColumn(4).setCellRenderer(rightRenderer);

            jTable2.getColumnModel().getColumn(5).setCellRenderer(rightRenderer);
            jTable2.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
            jTable2.getColumnModel().getColumn(7).setCellRenderer(rightRenderer);
            jTable2.getColumnModel().getColumn(8).setCellRenderer(rightRenderer);
            jTable2.getColumnModel().getColumn(9).setCellRenderer(rightRenderer);
            jTable2.getColumnModel().getColumn(10).setCellRenderer(rightRenderer);
            //        jTable2.getColumnModel().getColumn(10).setCellRenderer(rightRenderer);
            //        jTable2.getColumnModel().getColumn(11).setCellRenderer(rightRenderer);
            jTable2.setShowGrid(true);
            jTable2.setRowHeight(30);
        }

    } catch (SQLException ex) {
        Logger.getLogger(UsersLIst.class.getName()).log(Level.SEVERE, null, ex);
    }
}
public void dloans()
{
   

    
        
        String msql     = " select * from repayments where accno ='" + accno + "'";
             DefaultTableModel model = new DefaultTableModel();
    // jTable1 hh;
    jTable5.setModel(model);
     model.addColumn("Year");
    model.addColumn("Month");
    model.addColumn("Acc No");
    model.addColumn("Loan Type");
    // model.addColumn("Region");
    //   model.addColumn("Loan Type");
    model.addColumn("Member Id");
    model.addColumn("Name");
    model.addColumn("Intr");
    model.addColumn("Bal BF");
    model.addColumn("Recov Amount");
    model.addColumn("Intr Amount");
    model.addColumn("Total To Recover");
    model.addColumn("Bal CF");
    // model.
    // Create the first row
 //   Connection conn = DBconnect.ConnecrDb();

    //  String sql = "SELECT * from users ";
    try {
        pst3 = conn.prepareStatement(msql);

        rs3 = pst3.executeQuery();
        // rs.first();
        int p = 0;
        String accno = "";
        String typ = "";
        String membid = "";
        String nam = "";
        String bal = "";
        String amt = "";
        String intramt = "";
        String intr = "";
        String ramt = "";

        while (rs3.next()) {
            //  readdata();
            accno = rs3.getString("accno");
            typ = rs3.getString("typ");
            membid = rs3.getString("membid");
            nam = rs3.getString("nam");
            intr = rs3.getString("intr");
            bal = rs3.getString("bal");
            double dbal = rs3.getDouble("bal");
            bal = Format_amt.format(bal);
            amt = rs3.getString("amt");
            double damt = rs3.getDouble("amt");
            amt = Format_amt.format(amt);
            intramt = rs3.getString("intramt");
            double dintramt = rs3.getDouble("intramt");

            intramt = Format_amt.format(intramt);
            ramt = rs3.getString("ramt");
            double dramt = rs3.getDouble("ramt");
            ramt = Format_amt.format(ramt);
            double tot = dbal + dintramt - damt;
            String dtot = Double.toString(tot);
            dtot = Format_amt.format(dtot);
            model.insertRow(p, new Object[]{
                rs3.getString("yr"),
                rs3.getString("mon"),
                accno, typ, membid, nam, intr, bal, ramt, intramt, amt, dtot});
            
        }

    } catch (SQLException ex) {
        Logger.getLogger(UsersLIst.class.getName()).log(Level.SEVERE, null, ex);
         MessageBox.infoBox(ex.toString(), sql);
    }
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
            rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
        
            jTable5.getColumnModel().getColumn(6).setCellRenderer(rightRenderer);
            jTable5.getColumnModel().getColumn(7).setCellRenderer(rightRenderer);
            jTable5.getColumnModel().getColumn(8).setCellRenderer(rightRenderer);
            jTable5.getColumnModel().getColumn(9).setCellRenderer(rightRenderer);
            jTable5.getColumnModel().getColumn(10).setCellRenderer(rightRenderer);
            jTable5.getColumnModel().getColumn(11).setCellRenderer(rightRenderer);
   //  jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_ALL_COLUMNS);
    jTable5.setShowGrid(true); 
         jTable5.setRowHeight(30);

  
}
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // UsersLisr.e
        Query_Customer_accounts.this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void valActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valActionPerformed

    private void jTabbedPane5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane5FocusGained
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jTabbedPane5FocusGained

    private void jTabbedPane5FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane5FocusLost
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jTabbedPane5FocusLost

    private void jTable7FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable7FocusLost
        // TODO add your handling code here:
          jButton4.setVisible(false);
    }//GEN-LAST:event_jTable7FocusLost

    private void jTable7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable7FocusGained
        // TODO add your handling code here:
          jButton4.setVisible(true);
    }//GEN-LAST:event_jTable7FocusGained

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //   jTable7.getSelectedRow()
        String pnam="";
         int[] selectedRow = jTable7.getSelectedRows();
                int[] selectedColumns = jTable7.getSelectedColumns();
                int row = jTable7.getSelectedRow();
                int col = 1; // ID is the first Column
                if (row > -1) {
                  pnam = jTable7.getValueAt(row, 1).toString();

                }
        
           
            Guarantors dd=new Guarantors(this,true);
          // dd.setModal(true);
              //  dialog.setSize(400, 400);
                dd.setLocationRelativeTo(null);
               // dd.setExtendedState(dd.MAXIMIZED_BOTH);
               dd.setResizable(false);
                dd.setDefaultCloseOperation(dd.DO_NOTHING_ON_CLOSE);
          dd.setTitle("Guarantors For  :  "+pnam);
          dd.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Query_Customer_accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Query_Customer_accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Query_Customer_accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Query_Customer_accounts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Query_Customer_accounts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> fld;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTextField val;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}

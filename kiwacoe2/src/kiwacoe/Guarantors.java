/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kiwacoe;

//import static examples.NewJFrame2.pst;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.Alert;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import static kiwacoe.Expenses_Capture.zstat;




//import static majiApp.Payments_capture.zyr;
//import static majiApp.Payments_capture.pst2;
//import static majiApp.Payments_BList.zstat;
//import static majiApp.Payments_capture.sql;
//import static majiApp.Payments_capture.zmon;

/**
 *
 * @author user
 */
public class Guarantors extends javax.swing.JFrame {
 static ResultSet rs = null;
     static ResultSet rs2 = null;
     static ResultSet rs3 = null;
    static String mx, sql,xseq;
    public int x = 0,r=0;
    static PreparedStatement pst = null;
      static PreparedStatement pst2 = null;
       static PreparedStatement pst3 = null;
    //xmembid+"','"+xnam+"',"+xamt+",'"+xtyp+"','"+xcomm+"','"+xyr+"','"+xmon+"
     public String xnam,xamt,xcomm,xtyp,xmembid,xrdate;
     static String zyr,zmon,ztyp,zfind,zstat;
     public static String zmembid,znam,zaccno;
     int ff=0;
      int cnt=0;
     double tamt=0;
     public Connection conn=DBconnect.ConnecrDb();
    /**
     * Creates new form NewJDialog
     */
    public Guarantors(java.awt.Frame parent, boolean modal) {
       // super(parent, modal);
        initComponents();
        
    
        jTable1=SetTable.data(jTable1);
    zaccno=      Query_Customer_accounts.accno;
     //   zmon = Shares_List.zmon;
     //   zyr = Shares_List.zyr;
     //  ztyp = Shares_List.ztyp;
      //  zreg = Readings_BList.zreg;
      //  zstat = Shares_List.zstat;
         doread();
     //   jLabel7.setText("Year:  " + zyr + "    Month: " + zmon  + "   Type:  " + ztyp+"  Status:  "+zstat);
    //  jLabel7.setText("Year:  " + zyr + "    Month: " + zmon  +"  Status:  "+zstat);
  
   //    nam.setEditable(false);
       
         ListSelectionModel cellSelectionModel = jTable1.getSelectionModel();
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                String muserid = null;
                String mtyp = null;
                String mnam = null;
                int[] selectedRow = jTable1.getSelectedRows();
                int[] selectedColumns = jTable1.getSelectedColumns();
                int row = jTable1.getSelectedRow();
                int col = 1; // ID is the first Column
                
              if (row>-1)
                {    
           
         
                }
            }

        });
        
       
       
     //   updatetots();
      
      // poputate_fields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton4.setText("Close");
        jButton4.setFocusable(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 255));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 913, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(790, 790, 790)
                .addComponent(jButton4))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105)
                .addComponent(jButton4)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 public void doread()
{
    // String = mon.getSelectedItem().toString();
    //  String syr = yr.getSelectedItem().toString();
    //  String smon = String.format("%02d", mon.getSelectedIndex() + 1);

    sql = " select a.*,telno,email,paddr  from  guarantors a, saccodb b where  a.membid=b.membid and a. accno='" + zaccno + "'";
    //    System.
    //   MessageBox.infoBox(sql, "dffd");

    System.out.println(sql);
    DefaultTableModel model = new DefaultTableModel();
    // jTable1 hh;
    jTable1.setModel(model);

    model.addColumn("Membid ID");
  //  model.addColumn("Member ID");
    model.addColumn("Name");
 
    model.addColumn("Tel No");
    model.addColumn("P Address");
    model.addColumn("Email");
 //   model.addColumn("Rel.Ship");
//    jTable1.getColumnModel().getColumn(0).setMinWidth(0);

    //   model.addColumn("2 Name");
    Connection conn = DBconnect.ConnecrDb();

    try {
        pst = conn.prepareStatement(sql);
        rs = pst.executeQuery();
        // rs.first();
        int p = 0;
        while (rs.next()) {
            //  readdata();
            cnt = cnt + 1;
         //   tamt = tamt + Double.parseDouble(rs.getString("amt"));
            model.insertRow(p, new Object[]{
                rs.getString("membid"),
               rs.getString("nam"),
                //  rs.getString("idno"),
                    rs.getString("telno"),
                      rs.getString("paddr"),
                        rs.getString("email"),
                     //     rs.getString("relship"),
              //  rs.getString("nam"),
               });
        }
    } catch (SQLException ex) {
        Logger.getLogger(UsersLIst.class.getName()).log(Level.SEVERE, null, ex);
    }

 //   lcnt.setText("Record Count = " + Integer.toString(cnt));
 //   ltot.setText("Total Amount = " + Format_amt.format(Double.toString(tamt)));

    //    jTable1.removeColumn(jTable1.getColumnModel().getColumn(0)); 
    jTable1.setAutoResizeMode(jTable1.AUTO_RESIZE_ALL_COLUMNS);
 //    jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
    DefaultTableCellRenderer rightRenderer = new DefaultTableCellRenderer();
    rightRenderer.setHorizontalAlignment(JLabel.RIGHT);
    //  jTable1.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
  //  jTable1.getColumnModel().getColumn(3).setCellRenderer(rightRenderer);
   
}
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       // NewJFrame2 frame = new NewJFrame2();

       // frame.dispose();
        Guarantors.this.dispose();

    }//GEN-LAST:event_jButton4ActionPerformed
public void  updatetots()
{
   //   try {
   //     String[] qq= BatchTotals.yrmontyp(zyr, zmon, ztyp, "shbatches", "shares");
   //      cmt.setText(" Records="+qq[0]+"    Total Amount="+qq[1]);
   //  } catch (SQLException ex) {
   //      Logger.getLogger(Shares_Capture.class.getName()).log(Level.SEVERE, null, ex);
   //  }
    try {
              PreparedStatement pst7 = null; 
              Connection connx=DBconnect.ConnecrDb();
              String sql4="update shbatches set recs="+cnt+",tot="+tamt+" where CONCAT(yr,mon,typ)='"+zyr+zmon+ztyp+"'";
              System.out.print(sql4);
            //  MessageBox.infoBox(sql4, zstat);
              pst7=connx.prepareStatement(sql4);
              pst7.executeUpdate(sql4);
             
             //    rs= pst.executeQuery();
          } catch (SQLException ex) {
              Logger.getLogger(Shares_Capture.class.getName()).log(Level.SEVERE, null, ex);
              MessageBox.infoBox(ex.toString(), "New  Batch");
              return;
         //     msbbox.show(Alert.AlertType.ERROR, ex.toString(),"SQL Error" ,"ffff");
          }
}
   public void populate_data() throws SQLException
{
    /*
    String sql = "SELECT *  from kins where membid='" + membid.getText().toString() + "'";
    //Connection conn = DBconnect.ConnecrDb();
    System.out.println(sql);
    pst2 = conn.prepareStatement(sql);
    rs2 = pst2.executeQuery();
    // metno="Nil";
    // metsz="Nil";
    while (rs2.next()) {
        nam.setText(rs2.getString("nam"));

        amt.requestFocus();

    }
  */
}
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payments_capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payments_capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payments_capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payments_capture.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Payments_capture dialog = new Payments_capture(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                     //   System.exit(0);
                    }
                });
               
              //  dialog.setModal(true);
              //  dialog.setSize(400, 400);
                dialog.setLocationRelativeTo(null);
                 dialog.setTitle("Shares");
                 dialog.setResizable(false);
                dialog.setVisible(true);
            }
        });
    }



 
public void refresh_recordset() throws SQLException 
{
  /*  
    int zz=rs3.getRow();
     String        sql = "SELECT * from shares where yr='" + zyr + "' and mon='" + zmon + "' and typ='" + ztyp + "'";
  //  Connection conn = DBconnect.ConnecrDb();
    pst3 = conn.prepareStatement(sql);
    rs3 = pst3.executeQuery();
    x = 1;    
    int cnt= cntt();
   cmt.setText(Integer.toString( cnt));
   
  rs3.absolute(zz);
  loaddata();
 */
}

public int cntt() throws SQLException
{
    
    String sql = "SELECT count(*) as cnt from shares where yr='" + zyr + "' and mon='" + zmon + "' ";
  //  Connection conn = DBconnect.ConnecrDb();
    System.out.println(sql);
    pst2 = conn.prepareStatement(sql);
    rs2 = pst2.executeQuery();
    rs2.next();
    int cnt= rs2.getInt("cnt");
    return cnt;
}
public Date convertToDate(String receivedDate) throws ParseException{
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        Date date = formatter.parse(receivedDate);
        return date;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}

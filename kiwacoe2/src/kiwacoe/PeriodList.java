/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kiwacoe;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.Alert;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import static kiwacoe.Shares_List.zyr;

/**
 *
 * @author user
 */
public class PeriodList extends javax.swing.JFrame {
DefaultTableModel testlist = new DefaultTableModel();
 ResultSet rs = null;
          public String mx,sql;
      Connection conn = DBconnect.ConnecrDb();
        PreparedStatement pst = null;
        public String xuserid,xnam,xpass,xtyp,zmon,zyr,zstat;
      //  static String muserid,mnam,mtyp; 
    //   public static  ListSelectionModel cellSelectionModel ;
    /**
     * Creates new form UsersLIst
     * 
     * 
     */
         static JTable table;
    public PeriodList() {
    //  table=jTable1;
        initComponents();
        jTable1=SetTable.data(jTable1);
                ListSelectionModel cellSelectionModel = jTable1.getSelectionModel();
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                String muserid = null;
                String mtyp = null;
                String mnam = null;
                int[] selectedRow = jTable1.getSelectedRows();
                int[] selectedColumns = jTable1.getSelectedColumns();
                int row = jTable1.getSelectedRow();
                int col = 1; // ID is the first Column
                if (row > -1) {
                    zyr = jTable1.getValueAt(row, 0).toString();
                    zmon = jTable1.getValueAt(row, 1).toString();
                    //      ztyp = jTable1.getValueAt(row, 2).toString();
                    zstat = jTable1.getValueAt(row, 2).toString();
                }
                System.out.println("Selected: " + mtyp);
            }

        });
       //   mon.setSelectedItem(qym[0]);
        String qym[]=  GetMonth.set_yr_mon();
      yr.setSelectedItem(qym[1]);
        doread();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        yr = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Close Period");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Select Year");

        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Print List");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Add Period");
        jButton1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton1FocusGained(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        yr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026" }));
        yr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(yr, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(293, 293, 293))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addGap(72, 72, 72)
                            .addComponent(jButton2)
                            .addGap(63, 63, 63)
                            .addComponent(jButton4)
                            .addGap(85, 85, 85)
                            .addComponent(jButton3))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(yr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
          
           
    try {
        int recs=Count_Table_Recs.count("post_view2"," stat='Open' and CONCAT(yr,mon)='"+ zyr+zmon+"'");
        if (recs>0 )
        {
            String ans=Confirm.YesNo("The selected period has unposted transactions:\n\n"
                    + "Do you wish to proceed and close this period?", "Close Period");
          if (ans.equals("N"))
          {
              return;
          }
        }
    } catch (SQLException ex) {
        Logger.getLogger(PeriodList.class.getName()).log(Level.SEVERE, null, ex);
    }
        
        
        
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Are You Sure", "Close Period", dialogButton);
        if (dialogResult == 0) {
           // System.out.println("Yes option");
        } else {
           // System.out.println("No Option");
           return;
        }
     
        try {
            if (Validate_period.validate(zyr, zmon) > 0)//check if period is open
            {
                this.setCursor(cursor_typ.busy());
            //   Period_close.close(zyr, zmon);
                close_period(zyr, zmon);
                 this.setCursor(cursor_typ.notbusy());
                  doread();
                MessageBox.infoBox("Period Closed Successfully", "Close Period");
               

            } else {  //if period is not open
                MessageBox.infoBox("Period Not Open!!", "Close Period");
                return;
            }
        } catch (SQLException ex) {
            Logger.getLogger(PeriodList.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed
public  void close_period(String cyr,String cmon)
{
   // 
    String sql = "update  periods set status='closed' where yr='" + cyr + "' and mon='" + cmon + "'";
    System.out.println(sql);
    try {
        pst = conn.prepareStatement(sql);
        pst.executeUpdate(sql);
        //    rs= pst.executeQuery();
    } catch (SQLException ex) {
        Logger.getLogger(PeriodList.class.getName()).log(Level.SEVERE, null, ex);
        MessageBox.infoBox( ex.toString(), "SQL Error");
    }
}
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // UsersLisr.e
        PeriodList.this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
      
    
    // Insert a row at position p
   // int p = 1;
   // model.insertRow(p, new Object[] { "r3" });
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      //  MessageBox.infoBox("sdffdfsd", "dfdfgg");
        Period_add dd=new Period_add(this,true);
          // dd.setModal(true);
              //  dialog.setSize(400, 400);
                dd.setLocationRelativeTo(null);
               // dd.setExtendedState(dd.MAXIMIZED_BOTH);
               dd.setResizable(false);
          dd.setTitle("Add Period");
          dd.setVisible(true);
         

    }//GEN-LAST:event_jButton1ActionPerformed

    private void yrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yrActionPerformed
        // TODO add your handling code here:
        doread();
    }//GEN-LAST:event_yrActionPerformed

    private void jButton1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton1FocusGained
        // TODO add your handling code here:
        doread();
    }//GEN-LAST:event_jButton1FocusGained
  public void doread()
{
   // String = mon.getSelectedItem().toString();
    String syr = yr.getSelectedItem().toString();
  //  String smon = String.format("%02d", mon.getSelectedIndex() + 1);
    //  String sval=val.getText().toString();

    sql = " select * from periods where yr='" + syr + "' order  by mon asc";
    //    System.
    //   MessageBox.infoBox(sql, "dffd");
     System.out.println(sql);
    DefaultTableModel model = new DefaultTableModel();
    // jTable1 hh;
    jTable1.setModel(model);
    model.addColumn("Year");
    model.addColumn("Month");
   // model.addColumn("Region");
   
    model.addColumn("Status");
    // model.
    // Create the first row
    Connection conn = DBconnect.ConnecrDb();

    //  String sql = "SELECT * from users ";

    try {
        pst = conn.prepareStatement(sql);

        rs = pst.executeQuery();
        // rs.first();
        int p = 0;
        String byr = "";
        String bmon = "";
        String btyp = "";
        String bdate = "";
        String bstat = "";
        String brecs = "";
        String breg = "";
        while (rs.next()) {
            //  readdata();
            byr = rs.getString("yr");
            bmon = rs.getString("mon");
         
            bstat = rs.getString("status");
            model.insertRow(p, new Object[]{byr, bmon,  bstat});
        }

    } catch (SQLException ex) {
        Logger.getLogger(PeriodList.class.getName()).log(Level.SEVERE, null, ex);
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsersLIst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsersLIst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsersLIst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsersLIst.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UsersLIst().setVisible(true);
               
            }
        });
    }
    private static void selectedrecord()
    {
        
     
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> yr;
    // End of variables declaration//GEN-END:variables
}
